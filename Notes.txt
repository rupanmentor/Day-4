//Function Types

//1. Normal Function

function add(a,b){
   return a+b;
}
console.log(add(5,3));

//2. Anonymous Function || Function Expression
const subtract = function (a,b){
    return a-b;
}
console.log(subtract(5,3))

//2a. Anonymous Function 

setTimeout(function(){
    console.log("This runs after 5 seconds");
},5000)

//3. Arrow Function (ES6)
syntax:- 
const functionName = (parameters) => {
    // code to be executed
    }

const multiply = (a,b) => a*b

console.log(multiply(5,3));

//4. IIFE (Immediately Invoked Function Expression)

(function (){
    console.log("This function runs immediately");
})();


//Function types example
//Question : print odd numbers in an array [1,2,3,4,5,6,7,8,9,10]

//1. Normal function

var result = []
function odd (arr){
    for(let i=0;i<arr.length;i++){
        if(arr[i]%2!==0){
            result.push(arr[i])
        }
    }
    return result
}
console.log(odd([1,2,3,4,5,6,7,8,9,10]));

// 2. Anonymous Function

var result = []
var odd = function (arr){
    for(let i=0;i<arr.length;i++){
        if(arr[i]%2!==0){
            result.push(arr[i])
        }
    }
    return result
}
console.log(odd([1,2,3,4,5,6,7,8,9,10]));


// 3. IIFE


var result = [];
(function (arr) {
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] % 2 !== 0) {
      result.push(arr[i]);
    }
  }
  console.log(result);
})([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);


// 4. Arrow Function

var result = []
const odd = (arr) => {
    for(let i=0;i<arr.length;i++){
        if(arr[i]%2!==0){
            result.push(arr[i])
        }
    }
    return result
}
console.log(odd([1,2,3,4,5,6,7,8,9,10]));

//HOISTING

//Example with variable hoisting


console.log(x);
var x = 5;


// Example with function hoisting


display();

function display() {
    console.log("Hello world");
}


// SCOPING

//Global


var global = "Iam global"

function myfunc(a)
{
    var local = "Iam local"
    console.log(global);
    console.log(local);
    console.log(a)
}
myfunc(10);
console.log(global);
console.log(local);


//Block Scope

if(true){
    let block = "Iam Block scoped";
    console.log(block);
    
}
console.log(block);


// Looping
//While Loop
// Syntax

while (condition)
{
   // block of code
}

Example

let count =0;
while (count < 5)
{
    console.log("Count is:"+count);
    count++;
}


// Do While Loop
// Syntax
do{
   // block of code
} while (condition)

Example

let count =6;
do
{
    console.log("Count is:"+count);
    count++;
} while (count < 5 )